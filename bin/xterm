#!/bin/sh

#
# xterm
#
# xterm-a-like wrapper for gnome-terminal or tmux (depending on what we
# have available.
#
# This is basically a hackish script to workaround that fact the ARM FVP
# is (and maybe other useful tools are) hard coded to launch an xterm...
#

state=open

if [ "$XTERM_IS_NOP" = "y" ]
then
	echo Ignoring: $0 "$@"
	exit 0
fi

if [ ! -z $DISPLAY ]
then
	# We have display set but lets make sure we haven't been asked to
	# run in a fullscreen tmux session
	if [ ! -z $TMUX ] && tmux show -gv @fullscreen > /dev/null 2> /dev/null
	then
		cmd="tmux split-window"
		cmd_e=""
	else
		cmd="gnome-terminal"
		cmd_e="--command "
	fi
elif [ ! -z $TMUX ]
then
	cmd="tmux split-window"
	cmd_e=""
else
	echo "xterm: This environment can not support xterm emulation" >&2
	exit 1
fi

while [ $# -gt 0 ]
do
	case $state in
	open)
		case $1 in
		-title)
			state=title
			;;
		-e)
			cmd="$cmd $cmd_e '"
			state=command
		esac
		;;
	command)
		cmd="$cmd\"$1\""
		state=continuation
		;;
	continuation)
		cmd="$cmd \"$1\""
		;;
	title)
		# Option "--title" is no longer supported in latest version
		# of gnome-terminal (but having written the argument handling
		# we'll keep that).
		#cmd="$cmd --title '$1'"
		state=open
		;;
	esac

	shift
done

if [ $state = continuation ]
then
	cmd="$cmd'"
fi

echo "Launching: $cmd"
eval $cmd
